<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- NY: keep all MVC routes oarganized and reversible (see: https://github.com/resthub/springmvc-router) -->
    <bean id="handlerMapping" class="org.resthub.web.springmvc.router.RouterHandlerMapping">
        <property name="order" value="1"/>
        <property name="routeFiles">
            <list>
                <value>/WEB-INF/routes.conf</value>
            </list>
        </property>
        <!-- NY: enabled in dev mode !!! -->
        <property name="autoReloadEnabled" value="true" />
    </bean>


    <!-- Scan for annotated components -->
    <context:component-scan base-package="org.springular"/>
    <jpa:repositories base-package="org.springular" />
    <tx:annotation-driven/>

    <!-- Authentication -->
    <bean id="customAuthenticationProvider" class="org.springular.web.security.CustomAuthenticationProvider"/>
    <bean id="setCookieAuthenticationSuccessHandler" class="org.springular.web.security.SetCookieAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="/app/index.html"/>
    </bean>

    <security:authentication-manager alias="authenticationManager" >
        <security:authentication-provider ref="customAuthenticationProvider"/>
    </security:authentication-manager>

    <security:http auto-config='true'>
        <security:intercept-url pattern="/login.html*" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="http"/>
        <security:intercept-url pattern="/app/lib/bootstrap/**" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="http"/>
        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" requires-channel="http"/>
        <security:form-login login-page='/login.html' always-use-default-target="true" authentication-success-handler-ref="setCookieAuthenticationSuccessHandler"/>
        <security:logout invalidate-session="true" />
    </security:http>

    <!-- TODO NY: implement authorization for API access (/api):
    <security:global-method-security>
        <security:protect-pointcut expression="execution(* com.mycompany.*Service.*(..))"  access="ROLE_USER"/>
    </security:global-method-security>
    -->


    <!-- create simple embedded HSQL DB -->
    <jdbc:embedded-database id="embeddedDatasource" type="HSQL">
        <!-- load DDL and data: -->
        <!--<jdbc:script location="classpath:load_data.sql"/>-->
    </jdbc:embedded-database>

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="embeddedDatasource"/>
        <property name="packagesToScan" value="org.springular.model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="HSQL"/>
                <property name="generateDdl" value="true"/>
                <property name="showSql" value="true"/>
            </bean>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"/>

    <bean class="org.springular.DatabaseInitializer" init-method="init"/>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
       <property name="basenames">
            <list>
                 <value>messages</value>
            </list>
         </property>
     </bean>


    <bean class="org.springular.service.UiMetadataRepository" init-method="init">
        <property name="scanPackages">
            <util:list>
                <value>org.springular.*</value>
            </util:list>
        </property>
    </bean>


</beans>